program identifier LPAREN <identifier-list> RPAREN SEMICOLON <declarations> <sub-declarations> <compound-statement>identifier <identifier-list-tail>COMMA identifier <identifier-list-tail>var <declaration-list><identifier-list> COLON <type> SEMICOLON <declaration-list-tail> <identifier-list> COLON <type> SEMICOLON <declaration-list-tail>:=<standard-type><array-type>integerrealarray LBRACKET intconstant DOUBLEDOT intconstant RBRACKET of <standard-type><subprogram-declaration> <sub-declarations><subprogram-head> <declarations> <compound-statement>function identifier <arguments> COLON result <standard-type> SEMICOLONprocedure identifier <arguments> SEMICOLONLPAREN <parameter-list> RPAREN<identifier-list> COLON <type> <parameter-list-tail>SEMICOLON <identifier-list> COLON <type> <parameter-list-tail>begin <statement-list> end<statement> <statement-list-tail>SEMICOLON <statement> <statement-list-tail><elementary-statement>if <expression> then <statement> <else-clause>while <expression> do <statement>else <statement>identifier <es-tail><compound-statement><subscript> assignop <expression><parameters>LBRACKET <expression> RBRACKETLPAREN <expression-list> RPAREN<expression> <expression-list-tail>COMMA <expression> <expression-list-tail><simple-expression> <expression-tail>relop <simple-expression><term> <simple-expression-tail><sign> <term> <simple-expression-tail>addop <term> <simple-expression-tail><factor> <term-tail>mulop <factor> <term-tail>identifier <factor-tail><constant>LPAREN <expression> RPARENnot <factor><actual-parameters><subscript>LPAREN <expression-list> RPARENunaryplusunaryminus<program> endmarkerintconstantalconstant